{"version":3,"sources":["components/header.js","components/searchBar.js","components/leftArrow.js","components/rightArrow.js","simplearrow.svg","functions/results-functions.js","components/item.js","components/results.js","components/about.js","components/error.js","components/footer.js","services/pollution.js","components/main.js","services/geocoding.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","SearchBar","setCoordinates","cityRef","useRef","onSubmit","event","current","value","type","ref","LeftArrow","onClickFunction","onClick","RightArrow","colorFunctions","setaqiColor","setpm10Color","setpm25Color","seto3Color","setso2Color","setno2Color","setcoColor","getDate","str","substring","length","Item","itemType","pollutionHelp","barvalueScale","elements","actualLeftValue","parseInt","style","left","slice","i","offsetWidth","slideToPrev","document","getElementsByClassName","map","element","color","height","backgroundColor","datetime","parent","getBoundingClientRect","right","slideToNext","Results","cityName","coordinates","pollution","country","Math","abs","parseFloat","lat","toFixed","NorthOrSouth","lon","EastOrWest","About","Error","message","Footer","keys","Main","children","useState","enteredName","setEnteredName","changeCoordinates","setPollution","errorMessage","setErrorMessage","countPollution","hours","apiKeyNumber","console","log","keyNumber","options","method","url","params","headers","axios","request","getPollution","then","res","prevPollution","data","prev","catch","error","response","status","content","useEffect","options2","q","polygon_threshold","preventDefault","getCoordinates","prevCoordinates","display_name","lastIndexOf","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5b6d1387.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header__wrap\">\r\n      <img src=\"./logo.svg\" />\r\n      <h1>Air Pollution</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useRef } from \"react\";\r\n\r\nconst SearchBar = ({ setCoordinates }) => {\r\n  const cityRef = useRef(null);\r\n\r\n  return (\r\n    <div className=\"searchBar__wrap\">\r\n      <h2>Enter city name :</h2>\r\n      <form className=\"searchBar__form\" onSubmit={(event) => setCoordinates(event, cityRef.current.value)}>\r\n        <input type=\"text\" ref={cityRef} />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","const LeftArrow = ({onClickFunction}) => {\r\n  return (\r\n    <div onClick={onClickFunction} className=\"item__arrow\">\r\n      <img src=\"./images/arrowLeft.svg\"/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftArrow;\r\n","import simplearrow from '../simplearrow.svg'\r\n\r\nconst RightArrow = ({onClickFunction}) => {\r\n  return (\r\n    <div onClick={onClickFunction} className=\"item__arrow\">\r\n      <img src=\"./images/arrowRight.svg\"/>\r\n    </div>\r\n  );\r\n};\r\nexport default RightArrow;\r\n","export default __webpack_public_path__ + \"static/media/simplearrow.c5a74d6f.svg\";","export const slideToPrev = (elements) => {\r\n  let actualLeftValue = parseInt(\r\n    elements[0].style.left.slice(0, elements[0].style.left.length - 2),\r\n    10\r\n  );\r\n  for (let i = 0; i < elements.length; i++) {\r\n    if (actualLeftValue < 0) {\r\n      elements[i].style.left = actualLeftValue + elements[i].offsetWidth + \"px\";\r\n    }\r\n  }\r\n};\r\n\r\nexport const slideToNext = (elements, parent) => {\r\n  let actualLeftValue = elements[0].style.left.slice(\r\n    0,\r\n    elements[0].style.left.length - 2\r\n  );\r\n  for (let i = 0; i < elements.length; i++) {\r\n    if (\r\n      elements[elements.length - 1].getBoundingClientRect().right >\r\n      parent[0].getBoundingClientRect().right\r\n    ) {\r\n      elements[i].style.left = actualLeftValue - elements[i].offsetWidth + \"px\";\r\n    }\r\n  }\r\n};\r\n\r\nexport const colorFunctions ={\r\n  setaqiColor : value=>{\r\n  if(value<=50) return \"#00af50\"\r\n  if (value>50 && value<=100) return \"#debd43\"\r\n  if (value>100 && value<=150) return \"#fec100\"\r\n  if (value>150 && value<=200) return \"#fe0000\"\r\n  if (value>200 && value<=300) return \"#bf0001\"\r\n  if (value>300 && value<=500) return \"#581845\"\r\n},\r\nsetpm10Color : value=>{\r\n  if(value<=50) return \"#00af50\"\r\n  if (value>50 && value<=100) return \"#fec100\"\r\n  if (value>100 && value<=150) return \"#fe0000\"\r\n  if (value>150) return \"#bf0001\"\r\n},\r\nsetpm25Color : value=>{\r\n  if(value<=10) return \"#00af50\"\r\n  if (value>10 && value<=25) return \"#fec100\"\r\n  if (value>25 && value<=35) return \"#fe0000\"\r\n  if (value>35) return \"#bf0001\"\r\n},\r\nseto3Color : value=>{\r\n  if(value<=54) return \"#00af50\"\r\n  if (value>55 && value<=70) return \"#ffff00\"\r\n  if (value>71 && value<=85) return \"#fec100\"\r\n  if (value>86 && value<=105) return \"#fe0000\"\r\n  if (value>106 && value<=200) return \"#7030a1\"\r\n  if (value>201) return \"#bf0001\"\r\n},\r\nsetso2Color : value=>{\r\n  if(value<=5) return \"#00af50\"\r\n  if (value>5 && value<=7) return \"#fec100\"\r\n  if (value>7 && value<=10) return \"#fe0000\"\r\n  if (value>10) return \"#bf0001\"\r\n},\r\nsetno2Color : value=>{\r\n  if(value<=150) return \"#00af50\"\r\n  if (value>150 && value<=200) return \"#fec100\"\r\n  if (value>200 && value<=250) return \"#fe0000\"\r\n  if (value>250) return \"#bf0001\"\r\n},\r\nsetcoColor : value=>{\r\n  if(value<=90) return \"#00af50\"\r\n  if (value>90 && value<=100) return \"#fec100\"\r\n  if (value>100 && value<=150) return \"#fe0000\"\r\n  if (value>150) return \"#bf0001\"\r\n}\r\n}\r\n\r\nexport const getDate = (str)=>{\r\n  return(\r\n    str.substring(0,str.length-3)\r\n  )\r\n}\r\n\r\nexport const getTime = (str)=>{\r\n  return(\r\n    `${str.substring(str.length-2, str.length)}:00`\r\n  )\r\n}\r\n\r\nexport const getCountry = (str)=>{\r\n  return(\r\n    str.substring(str.lastIndexOf(',')+2, str.length)\r\n  )\r\n}\r\n","import React from \"react\";\r\nimport LeftArrow from \"./leftArrow\";\r\nimport RightArrow from \"./rightArrow\";\r\nimport {\r\n  slideToPrev,\r\n  slideToNext,\r\n  colorFunctions,\r\n  getDate,\r\n  getTime,\r\n} from \"../functions/results-functions\";\r\n\r\nconst Item = ({ itemType, pollutionHelp, barvalueScale }) => {\r\n  return (\r\n    <div className=\"item__wrap\">\r\n      <LeftArrow\r\n        onClickFunction={() =>\r\n          slideToPrev(document.getElementsByClassName(`${itemType}__wrap`))\r\n        }\r\n      />\r\n      <div className=\"item__content\">\r\n        {pollutionHelp.map((element) => (\r\n          <div className={`${itemType}__wrap`}>\r\n            <div\r\n              className={`${itemType}__value`}\r\n              style={{\r\n                color: colorFunctions[\"set\" + itemType + \"Color\"](\r\n                  element[itemType]\r\n                ),\r\n              }}\r\n            >\r\n              {element[itemType]}\r\n            </div>\r\n            <div className={`${itemType}__content`}>\r\n              <div\r\n                className={`${itemType}__bar`}\r\n                style={{\r\n                  height: `${element[itemType] / barvalueScale}%`,\r\n                  backgroundColor: colorFunctions[\"set\" + itemType + \"Color\"](\r\n                    element[itemType]\r\n                  ),\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className={`${itemType}__time`}>\r\n              {getTime(element.datetime)}\r\n            </div>\r\n            <div className={`${itemType}__day`}>\r\n              {getDate(element.datetime)}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <RightArrow\r\n        onClickFunction={() =>\r\n          slideToNext(\r\n            document.getElementsByClassName(`${itemType}__wrap`),\r\n            document.getElementsByClassName(\"item__content\")\r\n          )\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport { pollutionHelp } from \"./helpdata\";\r\nimport Item from \"./item\";\r\nimport {\r\n  slideToPrev,\r\n  slideToNext,\r\n  setAqiColor,\r\n} from \"../functions/results-functions\";\r\n\r\nconst Results = ({ cityName, coordinates, pollution }) => {\r\n\r\n  return (\r\n    <div className=\"results__wrap\">\r\n      \r\n    {cityName &&\r\n    <>\r\n      <h1>{cityName}, {coordinates.country} ({Math.abs(parseFloat(coordinates.lat).toFixed(2))}{coordinates.NorthOrSouth}, {Math.abs(parseFloat(coordinates.lon).toFixed(2))}{coordinates.EastOrWest}) </h1>\r\n      <div className=\"results__title\">\r\n        <h2>AQI</h2> \r\n        <div className=\"results__info-aqi\">\r\n        <img src=\"./images/info.svg\"/>\r\n        </div>\r\n        </div>\r\n      <Item itemType=\"aqi\" pollutionHelp={pollution} barvalueScale={5} />\r\n\r\n      <div className=\"results__title\">\r\n        <h2>PM10</h2> \r\n        <div className=\"results__info-pm10\">\r\n        <img src=\"./images/info.svg\"/>\r\n        </div>\r\n        </div>\r\n      <Item itemType=\"pm10\" pollutionHelp={pollution} barvalueScale={2.5} />\r\n\r\n      <div className=\"results__title\">\r\n        <h2>PM25</h2> \r\n        <div className=\"results__info-pm25\">\r\n        <img src=\"./images/info.svg\"/>\r\n        </div>\r\n        </div>\r\n      <Item itemType=\"pm25\" pollutionHelp={pollution} barvalueScale={0.5} />\r\n\r\n      <div className=\"results__title\">\r\n        <h2>O3</h2> \r\n        <div className=\"results__info-o3\">\r\n        <img src=\"./images/info.svg\"/>\r\n        </div>\r\n        </div>\r\n      <Item itemType=\"o3\" pollutionHelp={pollution} barvalueScale={3} />\r\n\r\n      <div className=\"results__title\">\r\n        <h2>SO2</h2> \r\n        <div className=\"results__info-so2\">\r\n        <img src=\"./images/info.svg\"/>\r\n        </div>\r\n        </div>\r\n      <Item itemType=\"so2\" pollutionHelp={pollution} barvalueScale={0.5} />\r\n\r\n      <div className=\"results__title\">\r\n        <h2>NO2</h2> \r\n        <div className=\"results__info-no2\">\r\n        <img src=\"./images/info.svg\"/>\r\n        </div>\r\n        </div>\r\n      <Item itemType=\"no2\" pollutionHelp={pollution} barvalueScale={3} />\r\n\r\n      <div className=\"results__title\">\r\n        <h2>CO</h2> \r\n        <div className=\"results__info-co\">\r\n        <img src=\"./images/info.svg\"/>\r\n        </div>\r\n        </div>\r\n      <Item itemType=\"co\" pollutionHelp={pollution} barvalueScale={10} />\r\n      </>\r\n    }\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","import React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <section className=\"about__wrap\">\r\n      <article>\r\n        <p>\r\n          Welcome to 72 hours air pollution forecast. Here you can check\r\n          forecast for every place on Earth, you only have to write city name in\r\n          the browser above.\r\n        </p>\r\n        <p>\r\n          Forecast predicts general AQI (Air quality Index), exact level of 4\r\n          harmful chemical compounds: O3, SO2, NO2, CO and level of 2\r\n          particulates: PM 10 and PM 25. Move cursor on info sign over overy\r\n          graph, to read more info about every pollution.\r\n        </p>\r\n        <p>\r\n          Attention! Page shows current pollution level, but it doesn't refresh\r\n          automatically every 1 hour\r\n        </p>\r\n      </article>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import React from \"react\";\r\n\r\nconst Error = ({ type, message, cityName }) => {\r\n    if(type=='content'){\r\n        return(\r\n            <div className=\"error__wrap\">City \"{cityName} does not exist!\"</div>\r\n        )\r\n    }\r\n    else if (type='content'){\r\n  return <div className=\"error__wrap\">{message}</div>;\r\n    }\r\n    else{\r\n        return <div className=\"error__wrap\">Unknown error has occured</div>\r\n    }\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return <div className=\"footer__wrap\">\r\n    <h2>Air pollution forecast</h2>\r\n    <h3>Jakub Wróbel 2021</h3>\r\n    </div>;\r\n};\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\nexport const keys=['50bf83cea7msh256e50596707c81p1bda08jsnfa836124e987','8cb705c6cfmsh0a3c87eb6ca9cf5p14a1a7jsn92aa1ee82eab','dd31c8c14cmsh2ab1c44907f3c88p1bcb1cjsnd1b772d2c469','edabb595a8mshc8280ddb349e608p156bb9jsn8072ab5b0200']\r\n\r\nexport const getPollution = (coordinates,hours,keyNumber)=>{\r\n    var options = {\r\n        method: 'GET',\r\n        url: 'https://air-quality.p.rapidapi.com/forecast/airquality',\r\n        params: {lat: coordinates.lat, lon: coordinates.lon, hours: hours},\r\n        headers: {\r\n          'x-rapidapi-host': 'air-quality.p.rapidapi.com',\r\n          'x-rapidapi-key': keys[keyNumber]\r\n        }\r\n      }; \r\n      \r\n\r\n      return (\r\n    axios.request(options)\r\n      )\r\n  }\r\n\r\n// export const handlePollutionErrors = (response, apiKeyNumber, coordinates, hours, countPollution, setConnectionErrorMessage)=>{\r\n//     switch (true) {\r\n//       case response.status == 429:\r\n//         if (apiKeyNumber < keys.length - 1) {\r\n//           apiKeyNumber++;\r\n//           countPollution(coordinates, hours, apiKeyNumber);\r\n//         } else {\r\n//           console.log('Error while connecting to forecast API. More info: ', response)\r\n//           setConnectionErrorMessage(\r\n//             \"Because of data provider's requests limit, getting and displaying more data is currently not available. Try again after 24 hours.\"\r\n//           );\r\n//         }\r\n//         break;\r\n//       case (response.status >= 300 && response.status < 400):\r\n//         console.log('Error while connecting to forecast API. More info: ',response)\r\n//         setConnectionErrorMessage(\"Page has been redirected\")\r\n//         break;\r\n//       case (response.status >= 400 && response.status != 429 && response.status < 500):\r\n//         console.log('Error while connecting to forecast API. More info: ',response)\r\n//         setConnectionErrorMessage(\"Client error has occured\")\r\n//         break;\r\n//       case response.status >= 500:\r\n//         console.log('Error while connecting to forecast API. More info: ',response)\r\n//         setConnectionErrorMessage(\r\n//           \"Server error has occured. Try again later\"\r\n//         );\r\n//         break;\r\n//         default:\r\n//           setConnectionErrorMessage(\r\n//             \"Undefined error has occured. Try again later.\"\r\n//           )\r\n//     }\r\n// }","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Header from \"./header\";\r\nimport Searchbar from \"./searchBar\";\r\nimport Results from \"./results\";\r\nimport About from \"./about\";\r\nimport Error from \"./error\";\r\nimport Footer from \"./footer\";\r\nimport { getCoordinates } from \"../services/geocoding\";\r\nimport { getPollution, keys } from \"../services/pollution\";\r\nimport { getCountry } from \"../functions/results-functions\";\r\n// import { pollutionHelp } from \"./helpdata\";\r\n\r\nconst Main = ({ children }) => {\r\n  const [enteredName, setEnteredName] = useState(\"\");\r\n\r\n  const [coordinates, changeCoordinates] = useState({\r\n    lat: \"\",\r\n    lon: \"\",\r\n    NorthOrSouth: \"\",\r\n    EastOrWest: \"\",\r\n    country: \"\",\r\n  });\r\n\r\n  const [pollution, setPollution] = useState([]);\r\n\r\n  const [errorMessage, setErrorMessage] = useState({\r\n    type:'',\r\n    message:''\r\n  });\r\n\r\n  const setCoordinates = (event, enteredName) => {\r\n    setEnteredName(enteredName);\r\n    getCoordinates(event, enteredName)\r\n      .then((response) => response.data)\r\n      .then((res) => {\r\n        if (typeof res.length == \"undefined\") {\r\n          setErrorMessage(prev=>({...prev, type:'content', message:'City does not exist'}));\r\n        } else {\r\n          setErrorMessage(prev=>({...prev, type:'', message:''}));\r\n          changeCoordinates((prevCoordinates) => ({\r\n            ...prevCoordinates,\r\n            lat: res[0].lat,\r\n            lon: res[0].lon,\r\n            NorthOrSouth: parseFloat(res[0].lat) > 0 ? \"N\" : \"S\",\r\n            EastOrWest: parseFloat(res[0].lon) > 0 ? \"E\" : \"W\",\r\n            country: getCountry(res[0].display_name),\r\n          }));\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        switch (true) {\r\n          case error.response.status == 429:\r\n            console.log(\r\n              \"Error while connecting to forecast API. More info: \",\r\n              error.response\r\n            );\r\n            setErrorMessage(prev=>({...prev, type:'connection', message:\r\n              \"Too many requests. You can do up to 4 requests per second\"})\r\n            );\r\n            break;\r\n          case error.response.status >= 300 && error.response.status < 400:\r\n            console.log(\r\n              \"Error while connecting to geocoding API. More info: \",\r\n              error.response\r\n            );\r\n            setErrorMessage(prev=>({...prev, type:'connection', message:\"Page has been redirected\"}));\r\n            break;\r\n          case error.response.status >= 400 &&\r\n            error.response.status != 429 &&\r\n            error.response.status < 500:\r\n            console.log(\r\n              \"Error while connecting to geocoding API. More info: \",\r\n              error.response\r\n            );\r\n            setErrorMessage(prev=>({...prev, type:'connection', message:\"Client error has occured\"}));\r\n            break;\r\n          case error.response.status >= 500:\r\n            console.log(\r\n              \"Error while connecting to geocoding API. More info: \",\r\n              error.response\r\n            );\r\n            setErrorMessage(prev=>({...prev, type:'connection', message:\r\n              \"Server error has occured. Try again later\"})\r\n            );\r\n            break;\r\n          default:\r\n            setErrorMessage(prev=>({...prev, type:'connection', message:\r\n              \"Undefined error has occured. Try again later.\"})\r\n            );\r\n        }\r\n      });\r\n  };\r\n\r\n  const countPollution = (coordinates, hours, apiKeyNumber) => {\r\n    console.log(apiKeyNumber);\r\n    getPollution(coordinates, hours, apiKeyNumber)\r\n      .then((res) => {\r\n        setPollution((prevPollution) => [...res.data.data]);\r\n        setErrorMessage(prev=>({...prev, type:'', message:\"\"}));\r\n      })\r\n      .catch((error) => {\r\n        switch (true) {\r\n          case error.response.status == 429:\r\n            if (apiKeyNumber < keys.length - 1) {\r\n              apiKeyNumber++;\r\n              countPollution(coordinates, hours, apiKeyNumber);\r\n            } else {\r\n              console.log(\r\n                \"Error while connecting to forecast API. More info: \",\r\n                error.response\r\n              );\r\n              setErrorMessage(prev=>({...prev, type:'connection', message:\r\n                \"Because of data provider's requests limit, getting and displaying more data is currently not available. Try again after 24 hours.\"})\r\n              );\r\n            }\r\n            break;\r\n          case error.response.status >= 300 && error.response.status < 400:\r\n            console.log(\r\n              \"Error while connecting to forecast API. More info: \",\r\n              error.response\r\n            );\r\n            setErrorMessage(prev=>({...prev, type:'connection', message:\"Page has been redirected\"}));\r\n            break;\r\n          case error.response.status >= 400 &&\r\n            error.response.status != 429 &&\r\n            error.response.status < 500:\r\n            console.log(\r\n              \"Error while connecting to forecast API. More info: \",\r\n              error.response\r\n            );\r\n            setErrorMessage(prev=>({...prev, type:'connection', message:\"Client error has occured\"}));\r\n            break;\r\n          case error.response.status >= 500:\r\n            console.log(\r\n              \"Error while connecting to forecast API. More info: \",\r\n              error.response\r\n            );\r\n            setErrorMessage(prev=>({...prev, type:'connection', message:\r\n              \"Server error has occured. Try again later\"})\r\n            );\r\n            break;\r\n          default:\r\n            setErrorMessage(prev=>({...prev, type:'connection', message:\r\n              \"Undefined error has occured. Try again later.\"})\r\n            );\r\n        }\r\n      });\r\n  };\r\n\r\n  let content = \"\";\r\n\r\n  if (enteredName.length > 0) {\r\n      if (errorMessage.type.length > 0) {\r\n        content = <Error type={errorMessage.type} message= {errorMessage.message} cityName={enteredName} />;\r\n      } else {\r\n        content = (\r\n          <Results\r\n            cityName={enteredName}\r\n            coordinates={coordinates}\r\n            pollution={pollution}\r\n          />\r\n        );\r\n      }\r\n  } else {\r\n    content = <About />;\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (coordinates.lat.length > 0 && coordinates.lon.length > 0) {\r\n      countPollution(coordinates, \"72\", 0);\r\n    }\r\n  }, [coordinates]);\r\n  console.log(coordinates);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Searchbar setCoordinates={setCoordinates} />\r\n      {content}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import axios from \"axios\";\r\n\r\nexport const getCoordinates = (event, cityName) => {\r\n  let options2 = {\r\n    method: \"GET\",\r\n    url: \"https://forward-reverse-geocoding.p.rapidapi.com/v1/search\",\r\n    params: { q: cityName, \"accept-language\": \"en\", polygon_threshold: \"0.0\" },\r\n    headers: {\r\n      \"x-rapidapi-host\": \"forward-reverse-geocoding.p.rapidapi.com\",\r\n      \"x-rapidapi-key\": \"dd31c8c14cmsh2ab1c44907f3c88p1bcb1cjsnd1b772d2c469\",\r\n    },\r\n  };\r\n\r\n  event.preventDefault();\r\n  return axios.request(options2);\r\n};\r\n","import Main from \"./components/main\";\nimport \"./styles/themes/default/theme.scss\";\n\nfunction App() {\n  return( \n  <div className='app__wrapper'>\n  <Main/>\n  </div>)\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}