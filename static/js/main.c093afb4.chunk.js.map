{"version":3,"sources":["components/header.js","components/searchBar.js","components/leftArrow.js","components/rightArrow.js","functions/results-functions.js","components/item.js","components/results.js","components/about.js","components/error.js","components/footer.js","services/pollution.js","redux/actions.js","components/appLogic.js","services/geocoding.js","redux/locationReducer.js","redux/pollutionReducer.js","redux/errorReducer.js","redux/rootReducer.js","redux/store.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","alt","SearchBar","setCoordinates","cityRef","useRef","onSubmit","event","current","value","type","ref","LeftArrow","onClickFunction","onClick","RightArrow","colorFunctions","setaqiColor","setpm10Color","setpm25Color","seto3Color","setso2Color","setno2Color","setcoColor","getDate","str","substring","length","getCountry","lastIndexOf","Item","itemType","pollution","barvalueScale","elements","actualLeftValue","parseInt","style","left","slice","i","offsetWidth","slideToPrev","document","getElementsByClassName","map","element","color","height","backgroundColor","datetime","parent","getBoundingClientRect","right","slideToNext","Results","cityName","coordinates","country","Math","abs","parseFloat","lat","toFixed","NorthOrSouth","lon","EastOrWest","About","Error","message","console","log","Footer","keys","enteredName","payload","res","func","data","errorType","errorMessage","connect","state","dispatch","setEnteredName","actions","changeCoordinates","setPollution","setError","resetError","location","error","countPollution","hours","apiKeyNumber","keyNumber","options","method","url","params","headers","axios","request","getPollution","then","catch","response","status","content","useEffect","q","polygon_threshold","preventDefault","getCoordinates","initialLocation","initialPollution","initialError","rootReducer","combineReducers","action","display_name","store","createStore","composeWithDevTools","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c093afb4.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"header__wrap\">\r\n      <img src=\"./logo.svg\" alt=\"logo\" />\r\n      <h1>Air Pollution</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","//Renders section with search bar\r\nimport React, { useRef } from \"react\";\r\n\r\nconst SearchBar = ({ setCoordinates }) => {\r\n  const cityRef = useRef(null);\r\n\r\n  return (\r\n    <div className=\"searchBar__wrap\">\r\n      <h2>Enter city name :</h2>\r\n      <form className=\"searchBar__form\" onSubmit={(event) => setCoordinates(event, cityRef.current.value)}>\r\n        <input type=\"text\" ref={cityRef} />\r\n        <button type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","//Renders left arrow in Item component\r\nconst LeftArrow = ({ onClickFunction }) => {\r\n  return (\r\n    <div onClick={onClickFunction} className=\"item__arrow\">\r\n      <img src=\"./images/arrowLeft.svg\" alt=\"forward\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LeftArrow;\r\n","//Renders right arrow in Item component\r\n\r\nconst RightArrow = ({ onClickFunction }) => {\r\n  return (\r\n    <div onClick={onClickFunction} className=\"item__arrow\">\r\n      <img src=\"./images/arrowRight.svg\" alt=\"backward\" />\r\n    </div>\r\n  );\r\n};\r\nexport default RightArrow;\r\n","//Decrease value of \"left\" property of element. That makes div with data looks like sliding left, when overflow is set to hidden\r\nexport const slideToPrev = (elements) => {\r\n  let actualLeftValue = parseInt(\r\n    elements[0].style.left.slice(0, elements[0].style.left.length - 2),\r\n    10\r\n  );\r\n  for (let i = 0; i < elements.length; i++) {\r\n    if (actualLeftValue < 0) {\r\n      elements[i].style.left = actualLeftValue + elements[i].offsetWidth + \"px\";\r\n    }\r\n  }\r\n};\r\n\r\n//Increase value of \"left\" property of element. That makes div with data looks like sliding right, when overflow is set to hidden\r\nexport const slideToNext = (elements, parent) => {\r\n  let actualLeftValue = elements[0].style.left.slice(\r\n    0,\r\n    elements[0].style.left.length - 2\r\n  );\r\n  for (let i = 0; i < elements.length; i++) {\r\n    if (\r\n      elements[elements.length - 1].getBoundingClientRect().right >\r\n      parent[0].getBoundingClientRect().right\r\n    ) {\r\n      elements[i].style.left = actualLeftValue - elements[i].offsetWidth + \"px\";\r\n    }\r\n  }\r\n};\r\n\r\n//Returns colors based on value. In this app it is used to return color of bar, based on value of pollution.\r\nexport const colorFunctions = {\r\n  setaqiColor: (value) => {\r\n    if (value <= 50) return \"#00af50\";\r\n    if (value > 50 && value <= 100) return \"#debd43\";\r\n    if (value > 100 && value <= 150) return \"#fec100\";\r\n    if (value > 150 && value <= 200) return \"#fe0000\";\r\n    if (value > 200 && value <= 300) return \"#bf0001\";\r\n    if (value > 300 && value <= 500) return \"#581845\";\r\n  },\r\n  setpm10Color: (value) => {\r\n    if (value <= 50) return \"#00af50\";\r\n    if (value > 50 && value <= 100) return \"#fec100\";\r\n    if (value > 100 && value <= 150) return \"#fe0000\";\r\n    if (value > 150) return \"#bf0001\";\r\n  },\r\n  setpm25Color: (value) => {\r\n    if (value <= 10) return \"#00af50\";\r\n    if (value > 10 && value <= 25) return \"#fec100\";\r\n    if (value > 25 && value <= 35) return \"#fe0000\";\r\n    if (value > 35) return \"#bf0001\";\r\n  },\r\n  seto3Color: (value) => {\r\n    if (value <= 54) return \"#00af50\";\r\n    if (value > 55 && value <= 70) return \"#ffff00\";\r\n    if (value > 71 && value <= 85) return \"#fec100\";\r\n    if (value > 86 && value <= 105) return \"#fe0000\";\r\n    if (value > 106 && value <= 200) return \"#7030a1\";\r\n    if (value > 201) return \"#bf0001\";\r\n  },\r\n  setso2Color: (value) => {\r\n    if (value <= 5) return \"#00af50\";\r\n    if (value > 5 && value <= 7) return \"#fec100\";\r\n    if (value > 7 && value <= 10) return \"#fe0000\";\r\n    if (value > 10) return \"#bf0001\";\r\n  },\r\n  setno2Color: (value) => {\r\n    if (value <= 150) return \"#00af50\";\r\n    if (value > 150 && value <= 200) return \"#fec100\";\r\n    if (value > 200 && value <= 250) return \"#fe0000\";\r\n    if (value > 250) return \"#bf0001\";\r\n  },\r\n  setcoColor: (value) => {\r\n    if (value <= 90) return \"#00af50\";\r\n    if (value > 90 && value <= 100) return \"#fec100\";\r\n    if (value > 100 && value <= 150) return \"#fe0000\";\r\n    if (value > 150) return \"#bf0001\";\r\n  },\r\n};\r\n\r\n//Returns date (as string) without anything else from response value from air pollution API\r\nexport const getDate = (str) => {\r\n  return str.substring(0, str.length - 3);\r\n};\r\n\r\n//Returns time (as string) without anything else from response value from air pollution API\r\nexport const getTime = (str) => {\r\n  return `${str.substring(str.length - 2, str.length)}:00`;\r\n};\r\n\r\n//Returns country name from geocoding API response\r\nexport const getCountry = (str) => {\r\n  return str.substring(str.lastIndexOf(\",\") + 2, str.length);\r\n};\r\n","//Renders one pollution section  \r\nimport React from \"react\";\r\nimport LeftArrow from \"./leftArrow\";\r\nimport RightArrow from \"./rightArrow\";\r\nimport {\r\n  slideToPrev,\r\n  slideToNext,\r\n  colorFunctions,\r\n  getDate,\r\n  getTime,\r\n} from \"../functions/results-functions\";\r\n\r\nconst Item = ({ itemType, pollution, barvalueScale }) => {\r\n  return (\r\n    <div className=\"item__wrap\">\r\n      <LeftArrow\r\n        onClickFunction={() =>\r\n          slideToPrev(document.getElementsByClassName(`${itemType}__wrap`))\r\n        }\r\n      />\r\n      <div className=\"item__content\">\r\n        {pollution.map((element) => (\r\n          <div className={`${itemType}__wrap`}>\r\n            <div\r\n              className={`${itemType}__value`}\r\n              style={{\r\n                color: colorFunctions[\"set\" + itemType + \"Color\"](\r\n                  element[itemType]\r\n                ),\r\n              }}\r\n            >\r\n              {element[itemType]}\r\n            </div>\r\n            <div className={`${itemType}__content`}>\r\n              <div\r\n                className={`${itemType}__bar`}\r\n                style={{\r\n                  height: `${element[itemType] / barvalueScale}%`,\r\n                  backgroundColor: colorFunctions[\"set\" + itemType + \"Color\"](\r\n                    element[itemType]\r\n                  ),\r\n                }}\r\n              ></div>\r\n            </div>\r\n            <div className={`${itemType}__time`}>\r\n              {getTime(element.datetime)}\r\n            </div>\r\n            <div className={`${itemType}__day`}>\r\n              {getDate(element.datetime)}\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <RightArrow\r\n        onClickFunction={() =>\r\n          slideToNext(\r\n            document.getElementsByClassName(`${itemType}__wrap`),\r\n            document.getElementsByClassName(\"item__content\")\r\n          )\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Item;\r\n","//It renders results for entered city\r\nimport React from \"react\";\r\nimport Item from \"./item\";\r\n\r\nconst Results = ({ cityName, coordinates, pollution }) => {\r\n  return (\r\n    <div className=\"results__wrap\">\r\n      {cityName && (\r\n        <>\r\n          <h1>\r\n            {cityName}, {coordinates.country} (\r\n            {Math.abs(parseFloat(coordinates.lat).toFixed(2))}\r\n            {coordinates.NorthOrSouth},{\" \"}\r\n            {Math.abs(parseFloat(coordinates.lon).toFixed(2))}\r\n            {coordinates.EastOrWest}){\" \"}\r\n          </h1>\r\n          <div className=\"results__title\">\r\n            <h2>AQI</h2>\r\n            <div className=\"results__info-aqi\">\r\n              <img src=\"./images/info.svg\" alt=\"info\" />\r\n            </div>\r\n          </div>\r\n          <Item itemType=\"aqi\" pollution={pollution} barvalueScale={5} />\r\n\r\n          <div className=\"results__title\">\r\n            <h2>PM10</h2>\r\n            <div className=\"results__info-pm10\">\r\n              <img src=\"./images/info.svg\" alt=\"info\" />\r\n            </div>\r\n          </div>\r\n          <Item itemType=\"pm10\" pollution={pollution} barvalueScale={2.5} />\r\n\r\n          <div className=\"results__title\">\r\n            <h2>PM25</h2>\r\n            <div className=\"results__info-pm25\">\r\n              <img src=\"./images/info.svg\" alt=\"info\" />\r\n            </div>\r\n          </div>\r\n          <Item itemType=\"pm25\" pollution={pollution} barvalueScale={0.5} />\r\n\r\n          <div className=\"results__title\">\r\n            <h2>O3</h2>\r\n            <div className=\"results__info-o3\">\r\n              <img src=\"./images/info.svg\" alt=\"info\" />\r\n            </div>\r\n          </div>\r\n          <Item itemType=\"o3\" pollution={pollution} barvalueScale={3} />\r\n\r\n          <div className=\"results__title\">\r\n            <h2>SO2</h2>\r\n            <div className=\"results__info-so2\">\r\n              <img src=\"./images/info.svg\" alt=\"info\" />\r\n            </div>\r\n          </div>\r\n          <Item itemType=\"so2\" pollution={pollution} barvalueScale={0.5} />\r\n\r\n          <div className=\"results__title\">\r\n            <h2>NO2</h2>\r\n            <div className=\"results__info-no2\">\r\n              <img src=\"./images/info.svg\" alt=\"info\" />\r\n            </div>\r\n          </div>\r\n          <Item itemType=\"no2\" pollution={pollution} barvalueScale={3} />\r\n\r\n          <div className=\"results__title\">\r\n            <h2>CO</h2>\r\n            <div className=\"results__info-co\">\r\n              <img src=\"./images/info.svg\" alt=\"info\" />\r\n            </div>\r\n          </div>\r\n          <Item itemType=\"co\" pollution={pollution} barvalueScale={10} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Results;\r\n","//Renders info about app\r\nimport React from \"react\";\r\n\r\nconst About = () => {\r\n  return (\r\n    <section className=\"about__wrap\">\r\n      <article>\r\n        <p>\r\n          Welcome to 72 hours air pollution forecast. Here you can check\r\n          forecast for every place on Earth, you only have to write city name in\r\n          the browser above.\r\n        </p>\r\n        <p>\r\n          Forecast predicts general AQI (Air quality Index), exact level of 4\r\n          harmful chemical compounds: O3, SO2, NO2, CO and level of 2\r\n          particulates: PM 10 and PM 25. Move cursor on info sign over overy\r\n          graph, to read more info about every pollution.\r\n        </p>\r\n        <p>\r\n          Attention! Page shows current pollution level, but it doesn't refresh\r\n          automatically every 1 hour\r\n        </p>\r\n      </article>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","//Component renders error message, which value depends on error's type\r\nimport React from \"react\";\r\n\r\nconst Error = ({ type, message, cityName }) => {\r\n  console.log(type);\r\n  if (type === \"content\") {\r\n    return <div className=\"error__wrap\">City \"{cityName} does not exist!\"</div>;\r\n  } else if ((type = \"content\")) {\r\n    return <div className=\"error__wrap\">{message}</div>;\r\n  } else {\r\n    return <div className=\"error__wrap\">Unknown error has occured</div>;\r\n  }\r\n};\r\n\r\nexport default Error;\r\n","import React from \"react\";\r\n\r\nconst Footer = () => {\r\n  return <div className=\"footer__wrap\">\r\n    <h2>Air pollution forecast</h2>\r\n    <h3>Jakub Wróbel 2021</h3>\r\n    </div>;\r\n};\r\n\r\nexport default Footer;\r\n","import axios from \"axios\";\r\n\r\n//API keys:\r\nexport const keys = [\r\n  \"50bf83cea7msh256e50596707c81p1bda08jsnfa836124e987\",\r\n  \"8cb705c6cfmsh0a3c87eb6ca9cf5p14a1a7jsn92aa1ee82eab\",\r\n  \"dd31c8c14cmsh2ab1c44907f3c88p1bcb1cjsnd1b772d2c469\",\r\n  \"edabb595a8mshc8280ddb349e608p156bb9jsn8072ab5b0200\",\r\n];\r\n\r\n\r\n//Makes API call and returns promise:\r\nexport const getPollution = (coordinates, hours, keyNumber) => {\r\n  const options = {\r\n    method: \"GET\",\r\n    url: \"https://air-quality.p.rapidapi.com/forecast/airquality\",\r\n    params: { lat: coordinates.lat, lon: coordinates.lon, hours: hours },\r\n    headers: {\r\n      \"x-rapidapi-host\": \"air-quality.p.rapidapi.com\",\r\n      \"x-rapidapi-key\": keys[keyNumber],\r\n    },\r\n  };\r\n\r\n  return axios.request(options);\r\n};\r\n","//Actions used as dispatch argument in app (used in AppLogic component)\r\nconst setEnteredName = (enteredName) => {\r\n  return {\r\n    type: \"SET_ENTERED_NAME\",\r\n    payload: enteredName,\r\n  };\r\n};\r\n\r\nconst changeCoordinates = (res, func) => {\r\n  return {\r\n    type: \"CHANGE_COORDINATES\",\r\n    payload: {\r\n      res,\r\n      func: (str) => func(str),\r\n    },\r\n  };\r\n};\r\n\r\nconst setPollution = (data) => {\r\n  return {\r\n    type: \"SET_POLLUTION\",\r\n    payload: data,\r\n  };\r\n};\r\n\r\nconst setError = (errorType, errorMessage) => {\r\n  return {\r\n    type: \"SET_ERROR\",\r\n    payload: {\r\n      errorType,\r\n      errorMessage,\r\n    },\r\n  };\r\n};\r\n\r\nconst resetError = () => {\r\n  return { type: \"RESET_ERROR\" };\r\n};\r\n\r\nexport default {\r\n  setEnteredName,\r\n  changeCoordinates,\r\n  setPollution,\r\n  setError,\r\n  resetError\r\n};\r\n","//Logic of Application\r\n\r\nimport React, { useEffect } from \"react\";\r\nimport Header from \"./header\";\r\nimport Searchbar from \"./searchBar\";\r\nimport Results from \"./results\";\r\nimport About from \"./about\";\r\nimport Error from \"./error\";\r\nimport Footer from \"./footer\";\r\nimport { getCoordinates } from \"../services/geocoding\";\r\nimport { getPollution, keys } from \"../services/pollution\";\r\nimport { getCountry } from \"../functions/results-functions\";\r\n\r\nimport actions from \"../redux/actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst AppLogic = ({\r\n  location,\r\n  pollution,\r\n  error,\r\n  setEnteredName,\r\n  changeCoordinates,\r\n  setPollution,\r\n  setError,\r\n  resetError,\r\n}) => {\r\n  //Function does 2 things:\r\n  //1) Runs setEnteredName func, which returns appropriate dispatch and saves city name, entered by user to the store\r\n  //2) Runs getCoordinates func, which returns axios promise. If it's resolved - then it checks if city exists. if yes - func saves it + set existing error to none, if no -\r\n  //   it sets existing error to \"City does not exist.\"\r\n  //   If promise is rejected, func sets existing error to some other value, according to error response status.\r\n  // Function getCoordinates is imported from services. Functions: setEnteredName, setError are defined in mapDispatchToProps and they return appropriate dispatch which changes redux store\r\n  //Function is passed as argument to searchBar component and it's triggered when user submits form (with onSubmit event, and city wrote by user as arguments)\r\n\r\n  const setCoordinates = (event, enteredName) => {\r\n    setEnteredName(enteredName);\r\n    getCoordinates(event, enteredName)\r\n      .then((response) => response.data)\r\n      .then((res) => {\r\n        if (typeof res.length == \"undefined\") {\r\n          setError(\"content\", \"City does not exist\");\r\n        } else {\r\n          resetError();\r\n          changeCoordinates(res[0], getCountry);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        switch (true) {\r\n          case error.response.status === 429:\r\n            console.log(\r\n              \"Error while connecting to forecast API. More info: \",\r\n              error.response\r\n            );\r\n            setError(\r\n              \"connection\",\r\n              \"Too many requests. You can do up to 4 requests per second\"\r\n            );\r\n            break;\r\n          case error.response.status >= 300 && error.response.status < 400:\r\n            console.log(\r\n              \"Error while connecting to geocoding API. More info: \",\r\n              error.response\r\n            );\r\n            setError(\"connection\", \"Page has been redirected\");\r\n            break;\r\n          case error.response.status >= 400 &&\r\n            error.response.status !== 429 &&\r\n            error.response.status < 500:\r\n            console.log(\r\n              \"Error while connecting to geocoding API. More info: \",\r\n              error.response\r\n            );\r\n            setError(\"connection\", \"Client error has occured\");\r\n            break;\r\n          case error.response.status >= 500:\r\n            console.log(\r\n              \"Error while connecting to geocoding API. More info: \",\r\n              error.response\r\n            );\r\n            setError(\"connection\", \"Server error has occured. Try again later\");\r\n            break;\r\n          default:\r\n            setError(\r\n              \"connection\",\r\n              \"Undefined error has occured. Try again later.\"\r\n            );\r\n        }\r\n      });\r\n  };\r\n\r\n  //Function runs getPollution function, which returns axios promise. If it's resolved, it does 2 things:\r\n  // 1) Runs setPollution function. This function comes from mapDispatchToProps and sets pollution\r\n  // to value which it get's from promise.\r\n  // 2) Runs resetError, which comes also from mapDispatchToProps, and sets existing error to none\r\n  // If it's rejected, it handles error in similar way then function \"setCoordinates\" from above.\r\n  const countPollution = (coordinates, hours, apiKeyNumber) => {\r\n    getPollution(coordinates, hours, apiKeyNumber)\r\n      .then((res) => {\r\n        setPollution(res.data.data);\r\n        resetError();\r\n      })\r\n      .catch((error) => {\r\n        switch (true) {\r\n          case error.response.status === 429:\r\n            //Here is interesting part. When error response from API is 429, and we still have new API keys in array of API keys,\r\n            //function calls itself recursively with another API key as argument.\r\n            //Recursion stops when we don't have any new keys which doesn't cause 429 error\r\n            //I wrote it because of data provider's limits of daily API calls.\r\n            if (apiKeyNumber < keys.length - 1) {\r\n              apiKeyNumber++;\r\n              countPollution(coordinates, hours, apiKeyNumber);\r\n            } else {\r\n              console.log(\r\n                \"Error while connecting to forecast API. More info: \",\r\n                error.response\r\n              );\r\n              setError(\r\n                \"connection\",\r\n                \"Because of data provider's requests limit, getting and displaying more data is currently not available. Try again after 24 hours.\"\r\n              );\r\n            }\r\n            break;\r\n          case error.response.status >= 300 && error.response.status < 400:\r\n            console.log(\r\n              \"Error while connecting to forecast API. More info: \",\r\n              error.response\r\n            );\r\n            setError(\"connection\", \"Page has been redirected\");\r\n            break;\r\n          case error.response.status >= 400 &&\r\n            error.response.status !== 429 &&\r\n            error.response.status < 500:\r\n            console.log(\r\n              \"Error while connecting to forecast API. More info: \",\r\n              error.response\r\n            );\r\n            setError(\"connection\", \"Client error has occured\");\r\n            break;\r\n          case error.response.status >= 500:\r\n            console.log(\r\n              \"Error while connecting to forecast API. More info: \",\r\n              error.response\r\n            );\r\n            setError(\"connection\", \"Server error has occured. Try again later\");\r\n            break;\r\n          default:\r\n            setError(\r\n              \"connection\",\r\n              \"Undefined error has occured. Try again later.\"\r\n            );\r\n        }\r\n      });\r\n  };\r\n\r\n  let content = \"\";\r\n\r\n  //According to current state (any existing errors, existing correct response from API or existing none of them), I set page content to different components:\r\n\r\n  if (location.enteredName.length > 0) {\r\n    if (error.errorType.length > 0) {\r\n      content = (\r\n        <Error\r\n          type={error.errorType}\r\n          message={error.errorMessage}\r\n          cityName={location.enteredName}\r\n        />\r\n      );\r\n    } else {\r\n      content = (\r\n        <Results\r\n          cityName={location.enteredName}\r\n          coordinates={location}\r\n          pollution={pollution}\r\n        />\r\n      );\r\n    }\r\n  } else {\r\n    content = <About />;\r\n  }\r\n\r\n  //countPollution func runs every time, when location has changed. Because of that it changes pollution prediction in store to values for another city and app renders again with correct values for another city:\r\n  useEffect(() => {\r\n    if (location.lat.length > 0 && location.lon.length > 0) {\r\n      countPollution(location, \"72\", 0);\r\n    }\r\n  }, [location]);\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <Searchbar setCoordinates={setCoordinates} />\r\n      {content}\r\n      <Footer />\r\n    </>\r\n  );\r\n};\r\n\r\n//Redux part. All dispatch argument functions are imported from actions.js:\r\n\r\nconst mapStateToProps = (state) => {\r\n  return state;\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    setEnteredName: (enteredName) =>\r\n      dispatch(actions.setEnteredName(enteredName)),\r\n    changeCoordinates: (res, func) =>\r\n      dispatch(actions.changeCoordinates(res, func)),\r\n    setPollution: (data) => dispatch(actions.setPollution(data)),\r\n    setError: (errorType, errorMessage) =>\r\n      dispatch(actions.setError(errorType, errorMessage)),\r\n    resetError: () => dispatch(actions.resetError()),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AppLogic);\r\n","import axios from \"axios\";\r\n\r\n//Makes API call and returns promise:\r\nexport const getCoordinates = (event, cityName) => {\r\n  let options = {\r\n    method: \"GET\",\r\n    url: \"https://forward-reverse-geocoding.p.rapidapi.com/v1/search\",\r\n    params: { q: cityName, \"accept-language\": \"en\", polygon_threshold: \"0.0\" },\r\n    headers: {\r\n      \"x-rapidapi-host\": \"forward-reverse-geocoding.p.rapidapi.com\",\r\n      \"x-rapidapi-key\": \"dd31c8c14cmsh2ab1c44907f3c88p1bcb1cjsnd1b772d2c469\",\r\n    },\r\n  };\r\n\r\n  event.preventDefault();\r\n  return axios.request(options);\r\n};\r\n","const initialLocation = {\r\n  enteredName: \"\",\r\n  lat: \"\",\r\n  lon: \"\",\r\n  NorthOrSouth: \"\",\r\n  EastOrWest: \"\",\r\n  country: \"\",\r\n};\r\n\r\nexport const locationReducer = (state = initialLocation, action) => {\r\n  switch (action.type) {\r\n    case \"SET_ENTERED_NAME\":\r\n      return {\r\n        ...state,\r\n        enteredName: action.payload,\r\n      };\r\n    case \"CHANGE_COORDINATES\":\r\n      return {\r\n        ...state,\r\n        lat: action.payload.res.lat,\r\n        lon: action.payload.res.lon,\r\n        NorthOrSouth: parseFloat(action.payload.res.lat) > 0 ? \"N\" : \"S\",\r\n        EastOrWest: parseFloat(action.payload.res.lon) > 0 ? \"E\" : \"W\",\r\n        country: action.payload.func(action.payload.res.display_name),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialPollution = [];\r\n\r\nexport const pollutionReducer = (state = initialPollution, action) => {\r\n  switch (action.type) {\r\n    case \"SET_POLLUTION\":\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialError = {\r\n  errorType: \"\",\r\n  errorMessage: \"\",\r\n};\r\n\r\nexport const errorReducer = (state = initialError, action) => {\r\n  switch (action.type) {\r\n    case \"SET_ERROR\":\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n      };\r\n    case \"RESET_ERROR\":\r\n      return initialError;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from \"redux\";\r\nimport { locationReducer } from \"./locationReducer\";\r\nimport { pollutionReducer } from \"./pollutionReducer\";\r\nimport { errorReducer } from \"./errorReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n  location: locationReducer,\r\n  pollution: pollutionReducer,\r\n  error: errorReducer,\r\n});\r\n","import { createStore } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { rootReducer } from \"./rootReducer\";\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools());\r\n","import AppLogic from \"./components/appLogic\";\r\nimport { Provider } from \"react-redux\";\r\nimport {store} from \"./redux/store\"\r\nimport \"./styles/themes/default/theme.scss\";\r\n\r\nfunction App() {\r\n  return( \r\n  <div className='app__wrapper'>\r\n    <Provider store={store}>\r\n  <AppLogic/>\r\n  </Provider>\r\n  </div>)\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}